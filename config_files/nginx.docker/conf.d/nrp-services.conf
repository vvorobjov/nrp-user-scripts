upstream uwsgicluster {
    server unix:///tmp/nrp-services.sock;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
        listen *:8090 default_server;
        server_name 127.0.0.1 localhost;

        # UPDATE to match your local Experiments folder
        set $simulation_experiments_folder /nrpStorage;

        # UPDATE to match your local temporary folder where experiements are cloned
        set $simulation_cloned_folder /tmp;

        set $cors "true${request_method}";
        set $cors_origin "$http_origin";
        set $cors_methods "GET, POST, PUT, DELETE, OPTIONS";
        set $cors_headers "Authorization,Content-Type,*";


        set $accept_client_auth true;

        location /webstream/ {
                add_header Access-Control-Allow-Origin $cors_origin always;
                add_header Access-Control-Allow-Methods $cors_methods always;
                add_header Access-Control-Allow-Headers $cors_headers always;

                proxy_pass http://127.0.0.1:8081/;
                proxy_set_header Host $host;
        }


        location / {
                include            uwsgi_params;
                uwsgi_pass         uwsgicluster;
                # Starting a simulation can take time, especially when using a vizualisation cluster
                uwsgi_read_timeout 300;

                add_header Access-Control-Allow-Origin $cors_origin always;
                add_header Access-Control-Allow-Methods $cors_methods always;
                add_header Access-Control-Allow-Headers $cors_headers always;


                if ($cors = "trueOPTIONS") {
                        return 204;
                }

                proxy_pass_request_headers on;
                proxy_set_header Host $http_host;
        }


        # Swagger interface
        location /api {
                include            uwsgi_params;
                uwsgi_pass         uwsgicluster;

                add_header Access-Control-Allow-Origin $cors_origin always;
                add_header Access-Control-Allow-Methods $cors_methods always;
                add_header Access-Control-Allow-Headers $cors_headers always;

                proxy_pass_request_headers on;
                proxy_set_header Host $http_host;
        }


        #load simulation configuration files from the model's folder
        location /config-from-template-folder/ {
                add_header Access-Control-Allow-Origin $cors_origin always;
                add_header Access-Control-Allow-Methods $cors_methods always;
                add_header Access-Control-Allow-Headers $cors_headers always;
                if ($request_method = OPTIONS ) {
                        return 204;
                }

                alias $simulation_experiments_folder/;
        }

        #load simulation configuration files from the cloned temporary folder
        location /config-from-cloned-folder/ {
                add_header Access-Control-Allow-Origin $cors_origin always;
                add_header Access-Control-Allow-Methods $cors_methods always;
                add_header Access-Control-Allow-Headers $cors_headers always;

                if ($request_method = OPTIONS ) {
                        return 204;
                }

                alias $simulation_cloned_folder/;
        }


        set $cors "true${request_method}";
        set $cors_origin "*";
        set $cors_methods "GET, POST, PUT, DELETE, OPTIONS";
        set $cors_headers "Authorization,Content-Type,If-Modified-Since,*";

        # Assets in $NRP_SIMULATION_DIR/assets directory
        location /user-assets {
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods $cors_methods always;
            add_header Access-Control-Allow-Headers $cors_headers always;

            if ($request_method = OPTIONS ) {
                    return 204;
            }

            set_by_lua $custom_assets 'return os.getenv("NRP_SIMULATION_DIR") .. "/assets"';
            alias $custom_assets;
            try_files $uri $uri/ =404;
        }
}
