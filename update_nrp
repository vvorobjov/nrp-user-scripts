#!/bin/bash
# This script gives many NRP updating options to users
source $HBP/user-scripts/nrp_functions || { echo ERROR; exit 1; }

ubuntu_version=`lsb_release -rs`
function contains {
  # usage: contains <list> <item>
  local list=$1
  local item=$2
  [[ " $list " =~ " $item " ]] && echo yes || echo no
}

function help {
  echo
  if [ "$NRP_INSTALL_MODE" != "user" ]; then
    echo "Usage: "`basename $0`" <command> [all] [spiking-cerebellum] [master]"
    echo
    echo "  If 'master' is provided, checkout the master branch"
    echo "  If 'master' is NOT provided, checkout the development branch (default)"
  else
    echo "Usage: "`basename $0`" <command> [all] [spiking-cerebellum]"
    echo
  fi
  echo "  If 'all' is provided, include 3rd party repos (gazebo, opensim, nest, ...)"
  echo "  If 'spiking-cerebellum' is provided with the build command, build NEST/SpikingCerebellum"
  echo "  Command can be:"
  echo "    help    : Print this message"
  echo "    rebase  : Switch repos to master and rebase"
  echo "    build   : Build all buildable repos (except 3rd party)"

  if [ "$NRP_INSTALL_MODE" != "user" ]; then
    echo "              Requires VPN connection"
  fi
  echo "    update  : Run rebase followed by build"
  echo "              You will be prompted to run configure_nrp"
  if [ "$NRP_INSTALL_MODE" != "user" ]; then
    echo "              Requires connection to the EPFL VPN"
  fi
  echo "    itmaster: Rebases your NRP and create a clean IT branch in each repo"
  echo "    gitclean: Removes all local branches except master and development"
}

if [ $# -lt 1 ]; then help; exit 1; fi
command="$1"
shift
args="$@"
if [[ `contains "${args}" "all"` == "yes" ]]; then
  all="all";
else
  all="no";
fi
if [[ `contains "${args}" "master"` == "yes" || "$NRP_INSTALL_MODE" == "user" ]]; then
  if echo "$ubuntu_version" | grep 16 >> /dev/null; then
    branch="master"
  else 
    branch="master18"
  fi
else
  branch="development";
fi
if [[ `contains "${args}" "spiking-cerebellum"` == "yes" ]]; then
  spiking_cerebellum_option="spiking-cerebellum";
else
  spiking_cerebellum_option="no-spiking-cerebellum";
fi

case "$command" in
"rebase")
  nrp_rebase $all $branch
  ;;
"build")
  nrp_build $all ${spiking_cerebellum_option}
  ;;
"update")
  nrp_rebase $all $branch
  echo
  echo "-------------------------------------------------------------------------------------"
  echo "Running a first pass of nrp_configure. Just let run and don't answer questions so far"
  echo "-------------------------------------------------------------------------------------"
  echo
  sleep 3
  nrp_configure
  nrp_build $all ${spiking_cerebellum_option}
  echo
  echo "----------------------------"
  echo "Second pass of nrp_configure"
  echo "----------------------------"
  echo
  sleep 2
  nrp_configure
  ;;
"itmaster")
  nrp_rebase $all $branch
  it_branch $all
  ;;
"gitclean")
  clean_branches $all
  ;;
*)
  help
  ;;
esac
