version: '3.0'

services:
  insite-access-node:
    image: docker-registry.ebrains.eu/nrp/insite-access-node:nrp
    ports:
      - "28080:8080"
    depends_on:
      - "insite-nest-module"
    command: ["http://nest-simulator:9000"]
    container_name: insite-access-node

  nest-desktop:
    # image:  docker-registry.ebrains.eu/nrp/nest-desktop:nrp
    image: docker-registry.ebrains.eu/nest/nest-desktop:3.2-nrp1
    environment:
      NEST_SIMULATOR_URL: http://localhost:5000
      INSITE_ACCESS_ENABLED: true
      INSITE_ACCESS_URL: http://localhost:28080
      # NEST_SERVER_BUFFER_SIZE: 65535
    ports:
      - "8000:8000"
    container_name: nrp-nest-desktop

  insite-nest-module:
    image: docker-registry.ebrains.eu/nrp/insite-nest-module:nrp
    ports:
      - "5000:5000"
      - "9010-9015:9000-9005"
    environment:
      INSITE_DOCKER_USE_NEST_SERVER: 1
      NEST_SERVER_BUFFER_SIZE: 65535
      NEST_SERVER_HOST: "0.0.0.0"
      NEST_SERVER_MODULES: "nest,numpy"
      NEST_SERVER_PORT: 5000
      NEST_SERVER_RESTRICTION_OFF: 1
      NEST_SERVER_STDOUT: 1
    container_name: nest-simulator
    stdin_open: true
    tty: true

  # nest-server:
  #   image: docker-registry.ebrains.eu/nest/nest-simulator:3.4
  #   environment:
  #     NEST_CONTAINER_MODE: "nest-server"
  #     NEST_SERVER_BUFFER_SIZE: 65535
  #     NEST_SERVER_HOST: "0.0.0.0"
  #     NEST_SERVER_MODULES: "nest,numpy"
  #     NEST_SERVER_PORT: 5000
  #     NEST_SERVER_RESTRICTION_OFF: 1
  #   ports:
  #     - "5000:5000"
  #   container_name: nest-simulator

  mqtt-broker-service:
    image: eclipse-mosquitto
    volumes:
      - ${HBP}/nrp-user-scripts/config_files/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    container_name: mqtt-broker

  haproxy-service:
    image: haproxy:2.7
    container_name: nrp-haproxy
    volumes:
      - ${HBP}/nrp-user-scripts/config_files/haproxy/local_docker/haproxy.docker.cfg:/usr/local/etc/haproxy/haproxy.cfg
      - ${HBP}/nrp-user-scripts/config_files/haproxy/cors.lua:/usr/local/etc/haproxy/lua_scripts/cors.lua
    ports:
      - 9000:9000
    depends_on:
      - nrp-proxy-service

  nrp-frontend-service:
    image: ${NRP_DOCKER_REGISTRY:-docker-registry.ebrains.eu/neurorobotics/}nrp/nrp-core/nrp-frontend${NRP_IMAGE_TAG}
    container_name: nrp-frontend
    volumes:
      - ${HBP}/nrp-user-scripts/config_files/nrp-frontend/app-settings-nest-desktop.js:/nrp-frontend-app/build/app-config.js


  nrp-proxy-service:
    image: ${NRP_DOCKER_REGISTRY:-docker-registry.ebrains.eu/neurorobotics/}nrp/nrp-core/nrp-proxy${NRP_IMAGE_TAG}
    container_name: nrp-proxy
    volumes:
      - ${HBP}/nrp-user-scripts/config_files/nrp-proxy/config.json.local.docker:/nrp-proxy-app/config.json
      - ${HBP}/nrp-core/examples/templates:/nrp-templates
      # - <Your-local-templates-folder>:/nrp-templates
      # - nrp-templates:/nrp-templates
      - ${STORAGE_PATH}:/nrpStorage
    depends_on:
      - nrp-backend-service

  nrp-backend-service:
    # image: ${NRP_DOCKER_REGISTRY:-docker-registry.ebrains.eu/neurorobotics/}nrp/nrp-core/backend-nrp-opensim-tvb-ubuntu20${NRP_IMAGE_TAG}
    # image: ${NRP_DOCKER_REGISTRY:-docker-registry.ebrains.eu/neurorobotics/}nrp/nrp-core/backend-nrp-xpra-gazebo-nest-ubuntu20${NRP_IMAGE_TAG}
    image: ${NRP_DOCKER_REGISTRY:-docker-registry.ebrains.eu/neurorobotics/}nrp/nrp-core/backend-nrp-xpra-gazebo-nest-ubuntu20${NRP_IMAGE_TAG}
    container_name: nrp-backend
    environment:
      - STORAGE_ADDRESS=nrp-haproxy
      - STORAGE_PORT=9000
      - NRP_MQTT_BROKER_ADDRESS=mqtt-broker:1883
    volumes:
      - ${HBP}/nrp-user-scripts/config_files/nginx.docker/uwsgi-nrp.ini:/usr/uwsgi-nrp.ini
      - ${HBP}/nrp-user-scripts/config_files/nginx.docker/nginx.conf:/etc/nginx/nginx.conf
      - ${HBP}/nrp-user-scripts/config_files/nginx.docker/conf.d/nrp-services.conf:/etc/nginx/conf.d/nrp-services.conf
      - ${HBP}/nrp-core/examples/templates:/nrp-templates

# You can specify your own Templates folder by nounting it instead of nrp-templates volume
volumes:
  nrp-templates:
