#!/bin/bash

devservers="\
  dev-cleserver-1.os.bbp.epfl.ch\
  dev-cleserver-2.os.bbp.epfl.ch\
  dev-cleserver-3.os.bbp.epfl.ch\
  dev-cleserver-4.os.bbp.epfl.ch\
  dev-cleserver-5.os.bbp.epfl.ch\
  dev-cleserver-6.os.bbp.epfl.ch\
  dev-slurmmonitor.os.bbp.epfl.ch\
  dev-proxyserver.os.bbp.epfl.ch"

stagingservers="\
  staging-cleserver-1.os.bbp.epfl.ch\
  staging-cleserver-2.os.bbp.epfl.ch\
  staging-cleserver-3.os.bbp.epfl.ch\
  staging-cleserver-4.os.bbp.epfl.ch\
  staging-cleserver-5.os.bbp.epfl.ch\
  staging-cleserver-6.os.bbp.epfl.ch\
  staging-cleserver-7.os.bbp.epfl.ch\
  staging-cleserver-8.os.bbp.epfl.ch\
  staging-cleserver-9.os.bbp.epfl.ch\
  staging-cleserver-10.os.bbp.epfl.ch\
  staging-cleserver-11.os.bbp.epfl.ch\
  staging-cleserver-12.os.bbp.epfl.ch\
  staging-cleserver-13.os.bbp.epfl.ch\
  staging-cleserver-14.os.bbp.epfl.ch\
  staging-cleserver-15.os.bbp.epfl.ch\
  staging-proxyserver.os.bbp.epfl.ch"


if [ $# -lt 1 ]
then
  echo "Usage: "$0" dev | staging | <list of machines>"
  exit 1
fi

if [ $1 = "staging" ]
then
  servers="$stagingservers"
elif [ $1 = "dev" ]
then
  servers="$devservers"
else
  servers="$*"
fi

function checkssh() {
    echo "Checking $1"
    touch "$touchfilebase""$1"
    ssh -o 'BatchMode yes' -o 'StrictHostKeyChecking no' -K root@$1 2>"$touchfilebase""$1" 1>/dev/null /bin/uname
    offends=`grep "Offending" "$touchfilebase""$1"`
    if [ -n "$offends" ]
    then
      echo "yes" > $2
      echo
      echo ------------------------------------------------------------
      echo $1
      echo "$offends"
#      cat "$touchfilebase""$1"
      echo ------------------------------------------------------------
    fi
    rm "$touchfilebase""$1"
}

function nrprestart() {
    echo "Restarting $1"
    touch "$touchfilebase""$1"
    ssh -o 'BatchMode yes' -K root@$1 /bin/bash << EOF
        supervisorctl stop all
        sleep 2
        nohup supervisorctl start all &>/dev/null 2>&1
        sleep 2
        nohup /etc/init.d/nginx-lua restart &>/root/restart.log 2>&1
        sleep 2
        echo
        echo ------------------------------------------------------------
        echo $1
        supervisorctl status
        cat /root/restart.log
        echo ------------------------------------------------------------
EOF
     rm "$touchfilebase""$1"
}

function waitforall() {
  finished="NOT"
  while [ -n "$finished" ]
  do
    sleep 5
    finished=`ls "$touchfilebase"* 2>/dev/null`
    touchbase=`basename $touchfilebase`
    restartlist=`echo "$finished" | sed 's/^.*'$touchbase'\(.*\)/\1/' | xargs`
    if [ -n "$restartlist" ]
    then
      echo "Still "$1": "$restartlist
    fi
  done
}




rm -f /tmp/nrprestart-*
rm -f /tmp/nrpcheckssh
touchfilebase="/tmp/nrprestart-"`date '+%H%M%S'`"-"
touch /tmp/nrpcheckssh

for var in $(eval echo $servers)
do
      checkssh $var /tmp/nrpcheckssh &
      sleep 0.5
done

waitforall "checking"

waserror=`cat /tmp/nrpcheckssh`

if [ -z "$waserror" ]
then
  for var in $(eval echo $servers)
  do
        nrprestart $var &
        sleep 1
  done
  waitforall "restarting"
else
  echo ------------------------------------------------------------
  echo "You have offendings keys in your known_host file."
  echo 'Remove keys using sed #d ~/.ssh/known_hosts where # is'
  echo 'the mentioned line number. Then manually ssh on the'
  echo 'mentioned machines to set the new RSA key and rerun this script'
  echo ------------------------------------------------------------
fi

rm -f /tmp/nrprestart-*
rm -f /tmp/nrpcheckssh
echo "Finished"
