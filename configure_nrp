#!/bin/bash
# A script to set-up config files for nginx, Frontend

source "$HBP"/nrp-user-scripts/repos.txt

"$HBP"/nrp-user-scripts/purge
GROUPNAME=$(/usr/bin/id -gn)
export GROUPNAME
mkdir -p -v "$HOME"/.local/etc/nginx "$HOME"/.local/etc/init.d "$HOME"/.local/etc/default "$HOME"/nginx "$HOME"/.local/var/log/nginx "$HOME"/.local/etc/nginx/lua "$HOME"/.local/etc/nginx/conf.d "$HOME"/.opt/bbp "$HOME"/.local/run/haproxy

# Create haproxy folder in .local
mkdir -p -v "$HOME"/.local/etc/haproxy "$HOME"/.local/var/log/haproxy "$HOME"/.local/var/run

# echo "Copying user_makefile to python repos"
# for i in "${nrp_python[@]}" ; do cp -f "$HBP"/nrp-user-scripts/config_files/user_makefile "$HBP"/$i; done

echo "Copying Frontend config.js file"
ln -s "$HBP"/nrp-user-scripts/config_files/nrp-frontend/config.js.local "$HBP"/nrp-frontend/src/config.js.local
cp "$HBP"/nrp-frontend/src/config.js.local "$HBP"/nrp-frontend/public/config.js

# echo "Copying start/stop scripts for gzserver and gzbridge"
# cp -r "$HBP"/nrp-user-scripts/nrp-services "$HOME"/.opt/bbp
# chmod u+x "$HOME"/.opt/bbp/nrp-services/gzbridge
# chmod u+x "$HOME"/.opt/bbp/nrp-services/gzserver

echo "Copying Proxy config files."
ln -s "$HBP"/nrp-user-scripts/config_files/nrp-proxy/config.json.local "$HBP"/nrp-proxy/config.json.local

if ! node --version | grep  -q v8.
then
  source "$HOME"/.bashrc
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
  nvm use 8 >/dev/null
  if [ $? -ne 0 ]
  then
    printf "\033[0;31mYou must use node v8. Please run 'nvm install 8 && nvm use 8 && nvm alias default 8 && npm install -g grunt', reopen your shells and run again './configure_nrp'\033[0m\n"
    exit 1
  fi
  nvm alias default 8
  printf "\033[0;31mSwitched to node v8. Please reopen all your shells and restart the server.\033[0m\n"
  # read -tr 5
fi

echo "Copying Nginx config files"

cp -r /etc/nginx/* "$HOME"/.local/etc/nginx/
cp /etc/init.d/nginx "$HOME"/.local/etc/init.d/nginx

echo "Copying Haproxy config files"

cp -r /etc/haproxy/* "$HOME"/.local/etc/haproxy/
cp /etc/init.d/haproxy "$HOME"/.local/etc/init.d/haproxy

# as of nginx 2.9 in order to use lua related commands we have to dynamically load
# the following two modules, which are found in /usr/lib/nginx/modules
# since we are running everything in "$HOME"/.local the libraries have to be copied manually
# to "$HOME"/.local/etc/nginx/modules
mkdir "$HOME"/.local/etc/nginx/modules
cp /usr/lib/nginx/modules/ndk_http_module.so "$HOME"/.local/etc/nginx/modules
cp /usr/lib/nginx/modules/ngx_http_lua_module.so "$HOME"/.local/etc/nginx/modules

sed -e 's: \/etc\/: '"$HOME"'\/.local\/etc\/:' -i "$HOME"/.local/etc/init.d/nginx
sed -e 's:\/var\/run\/:'"$HOME"'\/.local\/var\/run\/:' -i "$HOME"/.local/etc/init.d/haproxy
sed -e 's:=\/etc\/:='"$HOME"'\/.local\/etc\/:' -i "$HOME"/.local/etc/init.d/haproxy
sed -e 's:chown haproxy:#chown haproxy:' -i "$HOME"/.local/etc/init.d/haproxy
sed -e 's:chmod 2775:#chmod 2775:' -i "$HOME"/.local/etc/init.d/haproxy
sed -e 's:start-stop-daemon --quiet:start-stop-daemon --quiet --chuid $USER\:$USER:' -i "$HOME"/.local/etc/init.d/haproxy
echo 'DAEMON_OPTS="-c "$HOME"/.local/etc/nginx/nginx.conf -p "$HOME"/.local/etc/nginx"' >  "$HOME"/.local/etc/default/nginx

cp "$HBP"/nrp-user-scripts/config_files/nginx/nginx.conf "$HOME"/.local/etc/nginx/nginx.conf
sed -e 's/<username>/'"$USER"'/g' -i "$HOME"/.local/etc/nginx/nginx.conf
sed -e 's/<groupname>/'"$GROUPNAME"'/g' -i "$HOME"/.local/etc/nginx/nginx.conf
cp "$HBP"/nrp-user-scripts/config_files/nginx/conf.d/* "$HOME"/.local/etc/nginx/conf.d

sed -e 's|<HBP>|'"$HBP"'|' -i "$HOME"/.local/etc/nginx/conf.d/nrp-services.conf
sed -e 's/<username>/'"$USER"'/' -i "$HOME"/.local/etc/nginx/conf.d/nrp-services.conf

sed -e 's|<HBP>|'"$HBP"'|' -i "$HOME"/.local/etc/nginx/conf.d/frontend.conf

echo "Copying Haproxy config file"
cp "$HBP"/nrp-user-scripts/config_files/haproxy/local_source/haproxy.cfg "$HOME"/.local/etc/haproxy/
cp "$HBP"/nrp-user-scripts/config_files/haproxy/cors.lua "$HOME"/.local/etc/haproxy/cors.lua
sed -e 's/<username>/'"$USER"'/' -i "$HOME"/.local/etc/haproxy/haproxy.cfg


echo "Copying uwsgi config file"
cp "$HBP"/nrp-user-scripts/config_files/nginx/uwsgi-nrp.ini "$HOME"/.local/etc/nginx/uwsgi-nrp.ini


printf "\033[1;33mWould you like to setup your local storage database with a default user? (Y/n)\033[0m\n"
read -t 5 p
if [ "$p" == "N" -o "$p" == "n" ]
then
  echo "Skipping default database user creation"
else
  echo "Setting up local storage database"
  chmod +x "$HBP"/nrp-user-scripts/configure_storage_database
  "$HBP"/nrp-user-scripts/configure_storage_database
fi

echo "Setting configuration files to default mode (offline mode)"
"$HBP"/nrp-user-scripts/running_mode "2"
echo "DONE"
echo
echo "Warning: your running mode has been switched to full local (2)."
echo "         you might want to run running_mode to change it."